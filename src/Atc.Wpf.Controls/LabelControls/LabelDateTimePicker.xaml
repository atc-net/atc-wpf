<labelControls:LabelControl
    x:Class="Atc.Wpf.Controls.LabelControls.LabelDateTimePicker"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:atc="https://github.com/atc-net/atc-wpf/tree/main/schemas"
    xmlns:atcValueConverters="https://github.com/atc-net/atc-wpf/tree/main/schemas/value-converters"
    xmlns:baseControls="clr-namespace:Atc.Wpf.Controls.BaseControls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:labelControls="clr-namespace:Atc.Wpf.Controls.LabelControls"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:valueConverters="clr-namespace:Atc.Wpf.Controls.LabelControls.Internal.ValueConverters"
    IsTabStop="False"
    mc:Ignorable="d">

    <labelControls:LabelContent
        HideAreas="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=HideAreas}"
        InformationColor="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=InformationColor}"
        InformationContent="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=InformationContent}"
        InformationText="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=InformationText}"
        IsMandatory="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=IsMandatory}"
        IsTabStop="False"
        LabelText="{Binding RelativeSource={RelativeSource AncestorType={x:Type labelControls:LabelDateTimePicker}}, Path=LabelText, FallbackValue=LabelDateTimePicker}"
        LabelWidthNumber="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=LabelWidthNumber}"
        LabelWidthSizeDefinition="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=LabelWidthSizeDefinition}"
        MandatoryColor="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=MandatoryColor}"
        Orientation="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=Orientation}"
        ShowAsteriskOnMandatory="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=ShowAsteriskOnMandatory}"
        ValidationColor="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=ValidationColor}"
        ValidationText="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=ValidationText}">

        <atc:GridEx Columns="*,5,Auto,10,80,5,Auto" Rows="Auto">

            <TextBox
                Grid.Row="0"
                Grid.Column="0"
                atc:TextBoxHelper.ClearTextButton="True"
                atc:TextBoxHelper.HasValidationError="{Binding RelativeSource={RelativeSource AncestorType={x:Type labelControls:LabelDateTimePicker}}, Path=ValidationText, Converter={x:Static atcValueConverters:StringNullOrEmptyToInverseBoolValueConverter.Instance}}"
                atc:TextBoxHelper.ShowToolTip="{Binding RelativeSource={RelativeSource AncestorType={x:Type labelControls:LabelDateTimePicker}}, Path=HideAreas, Converter={x:Static valueConverters:LabelControlHideAreasToShowToolTipValueConverter.Instance}}"
                atc:TextBoxHelper.ToolTipText="{Binding RelativeSource={RelativeSource AncestorType={x:Type labelControls:LabelDateTimePicker}}, Path=ValidationText}"
                atc:TextBoxHelper.Watermark="{Binding RelativeSource={RelativeSource AncestorType={x:Type labelControls:LabelDateTimePicker}}, Path=WatermarkDateText}"
                atc:TextBoxHelper.WatermarkAlignment="{Binding RelativeSource={RelativeSource AncestorType={x:Type labelControls:LabelDateTimePicker}}, Path=WatermarkAlignment}"
                atc:TextBoxHelper.WatermarkTrimming="{Binding RelativeSource={RelativeSource AncestorType={x:Type labelControls:LabelDateTimePicker}}, Path=WatermarkTrimming}"
                KeyDown="OnDateTextKeyDown"
                MaxLength="30"
                MaxLines="1"
                Text="{Binding RelativeSource={RelativeSource AncestorType={x:Type labelControls:LabelDateTimePicker}}, Path=TextDate}" />

            <ToggleButton
                Grid.Row="0"
                Grid.Column="2"
                Background="Transparent"
                BorderThickness="0"
                IsChecked="{Binding RelativeSource={RelativeSource AncestorType={x:Type labelControls:LabelDateTimePicker}}, Path=OpenCalender}">
                <ToggleButton.Style>
                    <Style TargetType="{x:Type ToggleButton}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                    <Border Background="{TemplateBinding Background}">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.6" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ToggleButton.Style>
                <ToggleButton.Content>
                    <atc:SvgImage
                        Width="20"
                        Height="20"
                        Margin="0,-2,0,0"
                        Background="Transparent"
                        Cursor="Hand"
                        OverrideColor="{DynamicResource AtcApps.Colors.Accent}"
                        Source="/Atc.Wpf.Theming;component/Resources/calender.svg" />
                </ToggleButton.Content>
            </ToggleButton>

            <Popup
                AllowsTransparency="True"
                IsOpen="{Binding RelativeSource={RelativeSource AncestorType={x:Type labelControls:LabelDateTimePicker}}, Path=OpenCalender}"
                Placement="Bottom"
                StaysOpen="False">
                <Calendar
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    DisplayDate="{Binding RelativeSource={RelativeSource AncestorType={x:Type labelControls:LabelDateTimePicker}}, Path=DisplayDate}"
                    DisplayDateEnd="{Binding RelativeSource={RelativeSource AncestorType={x:Type labelControls:LabelDateTimePicker}}, Path=DisplayDateEnd}"
                    DisplayDateStart="{Binding RelativeSource={RelativeSource AncestorType={x:Type labelControls:LabelDateTimePicker}}, Path=DisplayDateStart}"
                    FirstDayOfWeek="{Binding RelativeSource={RelativeSource AncestorType={x:Type labelControls:LabelDateTimePicker}}, Path=FirstDayOfWeek}"
                    IsTodayHighlighted="{Binding RelativeSource={RelativeSource AncestorType={x:Type labelControls:LabelDateTimePicker}}, Path=IsTodayHighlighted}"
                    SelectedDate="{Binding RelativeSource={RelativeSource AncestorType={x:Type labelControls:LabelDateTimePicker}}, Path=SelectedDate}"
                    SelectionMode="SingleDate" />
            </Popup>

            <TextBox
                Grid.Row="0"
                Grid.Column="4"
                atc:TextBoxHelper.ClearTextButton="True"
                atc:TextBoxHelper.HasValidationError="{Binding RelativeSource={RelativeSource AncestorType={x:Type labelControls:LabelDateTimePicker}}, Path=ValidationText, Converter={x:Static atcValueConverters:StringNullOrEmptyToInverseBoolValueConverter.Instance}}"
                atc:TextBoxHelper.Watermark="{Binding RelativeSource={RelativeSource AncestorType={x:Type labelControls:LabelDateTimePicker}}, Path=WatermarkTimeText}"
                atc:TextBoxHelper.WatermarkAlignment="{Binding RelativeSource={RelativeSource AncestorType={x:Type labelControls:LabelDateTimePicker}}, Path=WatermarkAlignment}"
                atc:TextBoxHelper.WatermarkTrimming="{Binding RelativeSource={RelativeSource AncestorType={x:Type labelControls:LabelDateTimePicker}}, Path=WatermarkTrimming}"
                KeyDown="OnTimeTextKeyDown"
                MaxLength="8"
                MaxLines="1"
                Text="{Binding RelativeSource={RelativeSource AncestorType={x:Type labelControls:LabelDateTimePicker}}, Path=TextTime}" />

            <ToggleButton
                Grid.Row="0"
                Grid.Column="6"
                Background="Transparent"
                BorderThickness="0"
                IsChecked="{Binding RelativeSource={RelativeSource AncestorType={x:Type labelControls:LabelDateTimePicker}}, Path=OpenClock}">
                <ToggleButton.Style>
                    <Style TargetType="{x:Type ToggleButton}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                    <Border Background="{TemplateBinding Background}">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.6" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ToggleButton.Style>
                <ToggleButton.Content>
                    <atc:SvgImage
                        Width="20"
                        Height="20"
                        Margin="0,-2,0,0"
                        Background="Transparent"
                        Cursor="Hand"
                        OverrideColor="{DynamicResource AtcApps.Colors.Accent}"
                        Source="/Atc.Wpf.Theming;component/Resources/clock.svg" />
                </ToggleButton.Content>
            </ToggleButton>

            <Popup
                AllowsTransparency="True"
                IsOpen="{Binding RelativeSource={RelativeSource AncestorType={x:Type labelControls:LabelDateTimePicker}}, Path=OpenClock}"
                Placement="Bottom"
                StaysOpen="False">
                <baseControls:ClockPanelPicker SelectedClockChanged="OnClockPanelPickerSelectedClockChanged" SelectedDateTime="{Binding RelativeSource={RelativeSource AncestorType={x:Type labelControls:LabelDateTimePicker}}, Path=SelectedDate, Mode=TwoWay}" />
            </Popup>

        </atc:GridEx>

    </labelControls:LabelContent>

</labelControls:LabelControl>