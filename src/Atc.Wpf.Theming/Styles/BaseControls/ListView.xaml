<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:Atc.Wpf.Theming.Controls"
    xmlns:decorators="clr-namespace:Atc.Wpf.Theming.Decorators"
    xmlns:helpers="clr-namespace:Atc.Wpf.Theming.Helpers">

    <!--  ScrollViewer  -->
    <Style
        x:Key="AtcApps.Styles.ScrollViewer.GridView"
        BasedOn="{StaticResource {x:Static GridView.GridViewScrollViewerStyleKey}}"
        TargetType="{x:Type ScrollViewer}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid Background="{TemplateBinding Background}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <DockPanel Margin="{TemplateBinding Padding}">
                            <ScrollViewer
                                DockPanel.Dock="Top"
                                Focusable="False"
                                HorizontalScrollBarVisibility="Hidden"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                VerticalScrollBarVisibility="Hidden">
                                <controls:GridViewHeaderRowPresenterEx
                                    x:Name="PART_HeaderRowPresenter"
                                    Margin="2,0,2,0"
                                    AllowsColumnReorder="{Binding TemplatedParent.View.AllowsColumnReorder, RelativeSource={RelativeSource TemplatedParent}}"
                                    ColumnHeaderContainerStyle="{Binding TemplatedParent.View.ColumnHeaderContainerStyle, RelativeSource={RelativeSource TemplatedParent}}"
                                    ColumnHeaderContextMenu="{Binding TemplatedParent.View.ColumnHeaderContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
                                    ColumnHeaderStringFormat="{Binding TemplatedParent.View.ColumnHeaderStringFormat, RelativeSource={RelativeSource TemplatedParent}}"
                                    ColumnHeaderTemplate="{Binding TemplatedParent.View.ColumnHeaderTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                    ColumnHeaderTemplateSelector="{Binding TemplatedParent.View.ColumnHeaderTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
                                    ColumnHeaderToolTip="{Binding TemplatedParent.View.ColumnHeaderToolTip, RelativeSource={RelativeSource TemplatedParent}}"
                                    Columns="{Binding TemplatedParent.View.Columns, RelativeSource={RelativeSource TemplatedParent}}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </ScrollViewer>
                            <ScrollContentPresenter
                                x:Name="PART_ScrollContentPresenter"
                                CanContentScroll="{TemplateBinding CanContentScroll}"
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                KeyboardNavigation.DirectionalNavigation="Local"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </DockPanel>
                        <ScrollBar
                            x:Name="PART_HorizontalScrollBar"
                            Grid.Row="1"
                            Cursor="Arrow"
                            Maximum="{TemplateBinding ScrollableWidth}"
                            Minimum="0.0"
                            Orientation="Horizontal"
                            ViewportSize="{TemplateBinding ViewportWidth}"
                            Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                            Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                        <ScrollBar
                            x:Name="PART_VerticalScrollBar"
                            Grid.Column="1"
                            Cursor="Arrow"
                            Maximum="{TemplateBinding ScrollableHeight}"
                            Minimum="0.0"
                            Orientation="Vertical"
                            ViewportSize="{TemplateBinding ViewportHeight}"
                            Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                            Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding TemplatedParent.View.Columns, RelativeSource={RelativeSource Self}}" Value="{x:Null}">
                            <Setter TargetName="PART_HeaderRowPresenter" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  GridViewColumnHeaderGripper  -->
    <Style x:Key="AtcApps.Styles.Thumb.GridViewColumnHeaderGripper" TargetType="{x:Type Thumb}">
        <Setter Property="Background" Value="{DynamicResource AtcApps.Brushes.ListView.Border}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border
                        Margin="0,0,0,2"
                        Padding="{TemplateBinding Padding}"
                        Background="Transparent">
                        <Rectangle
                            Width="1"
                            HorizontalAlignment="Center"
                            Fill="{TemplateBinding Background}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Width" Value="18" />
    </Style>

    <!--  GridViewColumnHeader  -->
    <Style x:Key="AtcApps.Styles.GridViewColumnHeader" TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Foreground" Value="{DynamicResource AtcApps.Brushes.Text}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="Padding" Value="4,2" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GridViewColumnHeader">
                    <Grid>
                        <Rectangle Fill="Transparent" IsHitTestVisible="True" />
                        <Border
                            x:Name="HeaderBorder"
                            BorderBrush="{DynamicResource AtcApps.Brushes.ListView.Border}"
                            BorderThickness="0,0,0,1">
                            <controls:ContentControlEx
                                x:Name="HeaderContent"
                                Margin="0,0,0,1"
                                Padding="{TemplateBinding Padding}"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding Content}"
                                ContentCharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:ControlsHelper.ContentCharacterCasing)}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                RecognizesAccessKey="{TemplateBinding helpers:ControlsHelper.RecognizesAccessKey}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <Thumb
                            x:Name="PART_HeaderGripper"
                            Margin="0,0,-9,0"
                            HorizontalAlignment="Right"
                            Style="{StaticResource AtcApps.Styles.Thumb.GridViewColumnHeaderGripper}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="HeaderBorder" Property="Background" Value="{DynamicResource AtcApps.Brushes.Gray8}" />
                            <Setter TargetName="HeaderContent" Property="Margin" Value="1,1,0,0" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="helpers:ControlsHelper.ContentCharacterCasing" Value="{DynamicResource AtcApps.CharacterCasing.GridViewColumnHeader}" />
        <Style.Triggers>
            <Trigger Property="Role" Value="Floating">
                <Setter Property="Opacity" Value="0.7" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="GridViewColumnHeader">
                            <Canvas Name="PART_FloatingHeaderCanvas">
                                <Rectangle
                                    Width="{TemplateBinding ActualWidth}"
                                    Height="{TemplateBinding ActualHeight}"
                                    Fill="{DynamicResource AtcApps.Brushes.Accent3}" />
                            </Canvas>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  ItemBase  -->
    <Style x:Key="AtcApps.Styles.ListViewItem" TargetType="{x:Type ListViewItem}">
        <Setter Property="Background" Value="{DynamicResource AtcApps.Brushes.ThemeBackground}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="{DynamicResource AtcApps.Brushes.Text}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="MinHeight" Value="25" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Grid
                        x:Name="RootGrid"
                        Background="Transparent"
                        RenderOptions.ClearTypeHint="{TemplateBinding RenderOptions.ClearTypeHint}"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <decorators:ClipBorder
                            x:Name="Background"
                            Background="{TemplateBinding Background}"
                            CornerRadius="{TemplateBinding helpers:ControlsHelper.CornerRadius}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                        <decorators:ClipBorder
                            x:Name="Border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding helpers:ControlsHelper.CornerRadius}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <Grid>
                                <GridViewRowPresenter
                                    x:Name="PART_RowPresenter"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                <ContentPresenter
                                    x:Name="PART_ContentPresenter"
                                    Margin="{TemplateBinding Padding}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                    Visibility="Collapsed" />
                            </Grid>
                        </decorators:ClipBorder>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="GridView.ColumnCollection" Value="{x:Null}">
                            <Setter TargetName="PART_ContentPresenter" Property="Visibility" Value="Visible" />
                            <Setter TargetName="PART_RowPresenter" Property="Visibility" Value="Collapsed" />
                        </Trigger>

                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Background" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:ItemHelper.SelectedBackgroundBrush), Mode=OneWay}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:ItemHelper.SelectedBorderBrush), Mode=OneWay}" />
                            <Setter TargetName="PART_ContentPresenter" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:ItemHelper.SelectedForegroundBrush), Mode=OneWay}" />
                            <Setter TargetName="PART_RowPresenter" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:ItemHelper.SelectedForegroundBrush), Mode=OneWay}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="Selector.IsSelectionActive" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Background" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:ItemHelper.ActiveSelectionBackgroundBrush), Mode=OneWay}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:ItemHelper.ActiveSelectionBorderBrush), Mode=OneWay}" />
                            <Setter TargetName="PART_ContentPresenter" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:ItemHelper.ActiveSelectionForegroundBrush), Mode=OneWay}" />
                            <Setter TargetName="PART_RowPresenter" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:ItemHelper.ActiveSelectionForegroundBrush), Mode=OneWay}" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Background" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:ItemHelper.HoverSelectedBackgroundBrush), Mode=OneWay}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:ItemHelper.HoverSelectedBorderBrush), Mode=OneWay}" />
                            <Setter TargetName="PART_ContentPresenter" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:ItemHelper.HoverSelectedForegroundBrush), Mode=OneWay}" />
                            <Setter TargetName="PART_RowPresenter" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:ItemHelper.HoverSelectedForegroundBrush), Mode=OneWay}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Background" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:ItemHelper.HoverBackgroundBrush), Mode=OneWay}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:ItemHelper.HoverBorderBrush), Mode=OneWay}" />
                            <Setter TargetName="PART_ContentPresenter" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:ItemHelper.HoverForegroundBrush), Mode=OneWay}" />
                            <Setter TargetName="PART_RowPresenter" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:ItemHelper.HoverForegroundBrush), Mode=OneWay}" />
                        </MultiTrigger>

                        <Trigger Property="helpers:ItemHelper.IsMouseLeftButtonPressed" Value="True">
                            <Setter TargetName="Background" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:ItemHelper.MouseLeftButtonPressedBackgroundBrush), Mode=OneWay}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:ItemHelper.MouseLeftButtonPressedBorderBrush), Mode=OneWay}" />
                            <Setter TargetName="PART_ContentPresenter" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:ItemHelper.MouseLeftButtonPressedForegroundBrush), Mode=OneWay}" />
                            <Setter TargetName="PART_RowPresenter" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:ItemHelper.MouseLeftButtonPressedForegroundBrush), Mode=OneWay}" />
                        </Trigger>
                        <Trigger Property="helpers:ItemHelper.IsMouseRightButtonPressed" Value="True">
                            <Setter TargetName="Background" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:ItemHelper.MouseRightButtonPressedBackgroundBrush), Mode=OneWay}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:ItemHelper.MouseRightButtonPressedBorderBrush), Mode=OneWay}" />
                            <Setter TargetName="PART_ContentPresenter" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:ItemHelper.MouseRightButtonPressedForegroundBrush), Mode=OneWay}" />
                            <Setter TargetName="PART_RowPresenter" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:ItemHelper.MouseRightButtonPressedForegroundBrush), Mode=OneWay}" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Background" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:ItemHelper.DisabledBackgroundBrush), Mode=OneWay}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:ItemHelper.DisabledBorderBrush), Mode=OneWay}" />
                            <Setter TargetName="PART_ContentPresenter" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:ItemHelper.DisabledForegroundBrush), Mode=OneWay}" />
                            <Setter TargetName="PART_RowPresenter" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:ItemHelper.DisabledForegroundBrush), Mode=OneWay}" />
                            <Setter TargetName="RootGrid" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background, Mode=OneWay}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="PART_ContentPresenter" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:ItemHelper.DisabledSelectedForegroundBrush), Mode=OneWay}" />
                                <Setter TargetName="PART_RowPresenter" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:ItemHelper.DisabledSelectedForegroundBrush), Mode=OneWay}" />
                                <Setter TargetName="Background" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:ItemHelper.DisabledSelectedBackgroundBrush), Mode=OneWay}" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:ItemHelper.DisabledSelectedBorderBrush), Mode=OneWay}" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="helpers:ItemHelper.ActiveSelectionBackgroundBrush" Value="{DynamicResource AtcApps.Brushes.Accent}" />
        <Setter Property="helpers:ItemHelper.ActiveSelectionBorderBrush" Value="{DynamicResource AtcApps.Brushes.Highlight}" />
        <Setter Property="helpers:ItemHelper.ActiveSelectionForegroundBrush" Value="{DynamicResource AtcApps.Brushes.Selected.Foreground}" />
        <Setter Property="helpers:ItemHelper.DisabledBorderBrush" Value="{DynamicResource AtcApps.Brushes.Gray7}" />
        <Setter Property="helpers:ItemHelper.DisabledForegroundBrush" Value="{DynamicResource AtcApps.Brushes.Gray}" />
        <Setter Property="helpers:ItemHelper.DisabledSelectedBackgroundBrush" Value="{DynamicResource AtcApps.Brushes.Gray7}" />
        <Setter Property="helpers:ItemHelper.DisabledSelectedBorderBrush" Value="{DynamicResource AtcApps.Brushes.Gray7}" />
        <Setter Property="helpers:ItemHelper.DisabledSelectedForegroundBrush" Value="{DynamicResource AtcApps.Brushes.Selected.Foreground}" />
        <Setter Property="helpers:ItemHelper.HoverBackgroundBrush" Value="{DynamicResource AtcApps.Brushes.Accent3}" />
        <Setter Property="helpers:ItemHelper.HoverBorderBrush" Value="{DynamicResource AtcApps.Brushes.Highlight}" />
        <Setter Property="helpers:ItemHelper.HoverForegroundBrush" Value="{DynamicResource AtcApps.Brushes.Text}" />
        <Setter Property="helpers:ItemHelper.HoverSelectedBackgroundBrush" Value="{DynamicResource AtcApps.Brushes.Accent}" />
        <Setter Property="helpers:ItemHelper.HoverSelectedBorderBrush" Value="{DynamicResource AtcApps.Brushes.Highlight}" />
        <Setter Property="helpers:ItemHelper.HoverSelectedForegroundBrush" Value="{DynamicResource AtcApps.Brushes.Selected.Foreground}" />
        <Setter Property="helpers:ItemHelper.SelectedBackgroundBrush" Value="{DynamicResource AtcApps.Brushes.Accent2}" />
        <Setter Property="helpers:ItemHelper.SelectedBorderBrush" Value="{DynamicResource AtcApps.Brushes.Highlight}" />
        <Setter Property="helpers:ItemHelper.SelectedForegroundBrush" Value="{DynamicResource AtcApps.Brushes.Selected.Foreground}" />
    </Style>

    <!--  Base  -->
    <Style x:Key="AtcApps.Styles.ListView" TargetType="{x:Type ListView}">
        <Setter Property="AlternationCount" Value="2" />
        <Setter Property="Background" Value="{DynamicResource AtcApps.Brushes.ThemeBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource AtcApps.Brushes.ListView.Border}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListView">
                    <Border
                        x:Name="Border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding helpers:ControlsHelper.CornerRadius}"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <ScrollViewer
                            Padding="{TemplateBinding Padding}"
                            CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}"
                            HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            Style="{DynamicResource AtcApps.Styles.ScrollViewer.GridView}"
                            VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="true" />
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource AtcApps.Brushes.Gray9}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="helpers:ItemHelper.GridViewHeaderIndicatorBrush" Value="{DynamicResource AtcApps.Brushes.AccentBase}" />
        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False" />
        <Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="True" />
        <Setter Property="VirtualizingStackPanel.IsVirtualizingWhenGrouping" Value="True" />
        <Setter Property="VirtualizingStackPanel.VirtualizationMode" Value="Recycling" />
    </Style>

</ResourceDictionary>