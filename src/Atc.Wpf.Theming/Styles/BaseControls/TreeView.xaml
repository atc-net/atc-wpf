<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:atc="https://github.com/atc-net/atc-wpf/tree/main/schemas"
    xmlns:decorators="clr-namespace:Atc.Wpf.Theming.Decorators"
    xmlns:valueConverters="clr-namespace:Atc.Wpf.Theming.ValueConverters">

    <valueConverters:TreeViewMarginValueConverter x:Key="TreeViewMarginConverter" Length="12" />

    <PathGeometry x:Key="TreeArrow" Figures="M0,0 L0,6 L6,0 z" />

    <!--  DropDownButton  -->
    <Style x:Key="AtcApps.Styles.ToggleButton.TreeViewItem.ExpandCollapse" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Foreground" Value="{DynamicResource AtcApps.Brushes.ThemeForeground}" />
        <Setter Property="Height" Value="16" />
        <Setter Property="Margin" Value="1" />
        <Setter Property="MinWidth" Value="19" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid
                        Width="16"
                        Height="16"
                        Margin="{TemplateBinding Margin}"
                        Background="Transparent">
                        <Path
                            x:Name="ExpandPath"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Data="{StaticResource TreeArrow}"
                            Fill="{TemplateBinding Background}"
                            Stroke="{TemplateBinding Foreground}">
                            <Path.RenderTransform>
                                <RotateTransform Angle="135" CenterX="3" CenterY="3" />
                            </Path.RenderTransform>
                        </Path>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="ExpandPath" Property="Fill" Value="{DynamicResource AtcApps.Brushes.Gray1}" />
                            <Setter TargetName="ExpandPath" Property="RenderTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="180" CenterX="3" CenterY="3" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ExpandPath" Property="Stroke" Value="{DynamicResource AtcApps.Brushes.Gray5}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False" />
                                <Condition Property="IsChecked" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ExpandPath" Property="Fill" Value="{DynamicResource AtcApps.Brushes.Gray5}" />
                            <Setter TargetName="ExpandPath" Property="Stroke" Value="{DynamicResource AtcApps.Brushes.Gray5}" />
                        </MultiTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ExpandPath" Property="Fill" Value="{DynamicResource AtcApps.Brushes.Accent}" />
                            <Setter TargetName="ExpandPath" Property="Stroke" Value="{DynamicResource AtcApps.Brushes.Accent}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Width" Value="16" />
    </Style>

    <!--  ItemBase  -->
    <Style x:Key="AtcApps.Styles.TreeViewItem" TargetType="{x:Type TreeViewItem}">
        <Setter Property="Background" Value="{DynamicResource AtcApps.Brushes.ThemeBackground}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Foreground" Value="{DynamicResource AtcApps.Brushes.Text}" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, Mode=OneWay, FallbackValue=Stretch, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="MinHeight" Value="25" />
        <Setter Property="RenderOptions.ClearTypeHint" Value="{Binding Path=(RenderOptions.ClearTypeHint), Mode=OneWay, FallbackValue=Auto, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <StackPanel>
                        <Grid
                            x:Name="RootGrid"
                            MinHeight="{TemplateBinding MinHeight}"
                            Background="Transparent"
                            RenderOptions.ClearTypeHint="{TemplateBinding RenderOptions.ClearTypeHint}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <decorators:ClipBorder
                                x:Name="Background"
                                Background="{TemplateBinding Background}"
                                CornerRadius="{TemplateBinding atc:ControlsHelper.CornerRadius}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                            <decorators:ClipBorder
                                x:Name="Border"
                                Padding="{TemplateBinding Padding}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding atc:ControlsHelper.CornerRadius}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <Grid
                                    Margin="{Binding Converter={StaticResource TreeViewMarginConverter}, RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                                    VerticalAlignment="Stretch"
                                    Background="Transparent">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <ToggleButton
                                        x:Name="Expander"
                                        Grid.Column="0"
                                        ClickMode="Press"
                                        IsChecked="{Binding Path=IsExpanded, RelativeSource={x:Static RelativeSource.TemplatedParent}, Mode=TwoWay}"
                                        Style="{TemplateBinding atc:TreeViewItemHelper.ToggleButtonStyle}" />
                                    <ContentPresenter
                                        x:Name="PART_Header"
                                        Grid.Column="1"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        ContentSource="Header"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Grid>
                            </decorators:ClipBorder>
                        </Grid>

                        <ItemsPresenter x:Name="ItemsHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="False">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
                        </Trigger>

                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Background" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(atc:ItemHelper.SelectedBackgroundBrush), Mode=OneWay}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(atc:ItemHelper.SelectedBorderBrush), Mode=OneWay}" />
                            <Setter TargetName="PART_Header" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(atc:ItemHelper.SelectedForegroundBrush), Mode=OneWay}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="Selector.IsSelectionActive" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Background" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(atc:ItemHelper.ActiveSelectionBackgroundBrush), Mode=OneWay}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(atc:ItemHelper.ActiveSelectionBorderBrush), Mode=OneWay}" />
                            <Setter TargetName="PART_Header" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(atc:ItemHelper.ActiveSelectionForegroundBrush), Mode=OneWay}" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition SourceName="RootGrid" Property="IsMouseOver" Value="True" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Background" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(atc:ItemHelper.HoverSelectedBackgroundBrush), Mode=OneWay}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(atc:ItemHelper.HoverSelectedBorderBrush), Mode=OneWay}" />
                            <Setter TargetName="PART_Header" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(atc:ItemHelper.HoverSelectedForegroundBrush), Mode=OneWay}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition SourceName="RootGrid" Property="IsMouseOver" Value="True" />
                                <Condition Property="IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Background" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(atc:ItemHelper.HoverBackgroundBrush), Mode=OneWay}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(atc:ItemHelper.HoverBorderBrush), Mode=OneWay}" />
                            <Setter TargetName="PART_Header" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(atc:ItemHelper.HoverForegroundBrush), Mode=OneWay}" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition SourceName="RootGrid" Property="IsMouseOver" Value="True" />
                                <Condition Property="atc:ItemHelper.IsMouseLeftButtonPressed" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Background" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(atc:ItemHelper.MouseLeftButtonPressedBackgroundBrush), Mode=OneWay}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(atc:ItemHelper.MouseLeftButtonPressedBorderBrush), Mode=OneWay}" />
                            <Setter TargetName="PART_Header" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(atc:ItemHelper.MouseLeftButtonPressedForegroundBrush), Mode=OneWay}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition SourceName="RootGrid" Property="IsMouseOver" Value="True" />
                                <Condition Property="atc:ItemHelper.IsMouseRightButtonPressed" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Background" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(atc:ItemHelper.MouseRightButtonPressedBackgroundBrush), Mode=OneWay}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(atc:ItemHelper.MouseRightButtonPressedBorderBrush), Mode=OneWay}" />
                            <Setter TargetName="PART_Header" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(atc:ItemHelper.MouseRightButtonPressedForegroundBrush), Mode=OneWay}" />
                        </MultiTrigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Background" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(atc:ItemHelper.DisabledBackgroundBrush), Mode=OneWay}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(atc:ItemHelper.DisabledBorderBrush), Mode=OneWay}" />
                            <Setter TargetName="PART_Header" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(atc:ItemHelper.DisabledForegroundBrush), Mode=OneWay}" />
                            <Setter TargetName="RootGrid" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background, Mode=OneWay}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="Background" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(atc:ItemHelper.DisabledSelectedBackgroundBrush), Mode=OneWay}" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(atc:ItemHelper.DisabledSelectedBorderBrush), Mode=OneWay}" />
                                <Setter TargetName="PART_Header" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(atc:ItemHelper.DisabledSelectedForegroundBrush), Mode=OneWay}" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, Mode=OneWay, FallbackValue=Center, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="atc:ItemHelper.ActiveSelectionBackgroundBrush" Value="{DynamicResource AtcApps.Brushes.Accent}" />
        <Setter Property="atc:ItemHelper.ActiveSelectionForegroundBrush" Value="{DynamicResource AtcApps.Brushes.Selected.Foreground}" />
        <Setter Property="atc:ItemHelper.DisabledForegroundBrush" Value="{DynamicResource AtcApps.Brushes.Gray}" />
        <Setter Property="atc:ItemHelper.DisabledSelectedBackgroundBrush" Value="{DynamicResource AtcApps.Brushes.Gray7}" />
        <Setter Property="atc:ItemHelper.DisabledSelectedForegroundBrush" Value="{DynamicResource AtcApps.Brushes.Selected.Foreground}" />
        <Setter Property="atc:ItemHelper.HoverBackgroundBrush" Value="{DynamicResource AtcApps.Brushes.Accent3}" />
        <Setter Property="atc:ItemHelper.HoverForegroundBrush" Value="{DynamicResource AtcApps.Brushes.Text}" />
        <Setter Property="atc:ItemHelper.HoverSelectedBackgroundBrush" Value="{DynamicResource AtcApps.Brushes.Accent}" />
        <Setter Property="atc:ItemHelper.HoverSelectedForegroundBrush" Value="{DynamicResource AtcApps.Brushes.Selected.Foreground}" />
        <Setter Property="atc:ItemHelper.SelectedBackgroundBrush" Value="{DynamicResource AtcApps.Brushes.Accent2}" />
        <Setter Property="atc:ItemHelper.SelectedForegroundBrush" Value="{DynamicResource AtcApps.Brushes.Selected.Foreground}" />
        <Setter Property="atc:TreeViewItemHelper.ToggleButtonStyle" Value="{StaticResource AtcApps.Styles.ToggleButton.TreeViewItem.ExpandCollapse}" />
        <Style.Triggers>
            <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="True">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel />
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  Base  -->
    <Style x:Key="AtcApps.Styles.TreeView" TargetType="{x:Type TreeView}">
        <Setter Property="Background" Value="{DynamicResource AtcApps.Brushes.ThemeBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource AtcApps.Brushes.TreeView.Border}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeView}">
                    <Border
                        Name="Border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding atc:ControlsHelper.CornerRadius}"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <ScrollViewer
                            x:Name="TreeViewScrollViewer"
                            Padding="{TemplateBinding Padding}"
                            CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}"
                            Focusable="False"
                            HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="True" />
        <Setter Property="VirtualizingStackPanel.VirtualizationMode" Value="Recycling" />
        <Setter Property="atc:ControlsHelper.CornerRadius" Value="{DynamicResource AtcApps.CornerRadius.TreeView}" />
        <Style.Triggers>
            <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="True">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel />
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="BorderBrush" Value="{DynamicResource AtcApps.Brushes.Gray9}" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>