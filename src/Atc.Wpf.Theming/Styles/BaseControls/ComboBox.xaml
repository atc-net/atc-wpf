<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:atcValueConverters="https://github.com/atc-net/atc-wpf/tree/main/schemas/value-converters"
    xmlns:decorators="clr-namespace:Atc.Wpf.Theming.Decorators"
    xmlns:helpers="clr-namespace:Atc.Wpf.Theming.Helpers">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Atc.Wpf.Theming;component/Styles/ControlsStoryboard.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Atc.Wpf.Theming;component/Styles/BaseControls/TextBox.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!--  DropDownButton  -->
    <Style x:Key="AtcApps.Styles.ToggleButton.ComboBoxDropDown" TargetType="{x:Type ToggleButton}">
        <Setter Property="ClickMode" Value="Press" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid
                        x:Name="ToggleButtonRootGrid"
                        Margin="0,0.5,0.5,1"
                        Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="TextColumn" Width="*" />
                            <ColumnDefinition x:Name="ToggleButtonColumn" Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid
                            x:Name="BtnArrowBackground"
                            Grid.Column="1"
                            Width="{TemplateBinding helpers:TextBoxHelper.ButtonWidth}"
                            Background="Transparent">
                            <Path
                                x:Name="ArrowIcon"
                                Width="10"
                                Height="10"
                                HorizontalAlignment="Center"
                                Data="{DynamicResource AtcApps.Geometry.ArrowDown}"
                                Fill="{DynamicResource AtcApps.Brushes.Gray1}"
                                IsHitTestVisible="False"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                Stretch="Uniform" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="BtnArrowBackground" Property="IsMouseOver" Value="True">
                            <Setter TargetName="BtnArrowBackground" Property="Background" Value="{DynamicResource AtcApps.Brushes.Gray5}" />
                        </Trigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsPressed}" Value="True">
                            <Setter TargetName="BtnArrowBackground" Property="Background" Value="{DynamicResource AtcApps.Brushes.Gray3}" />
                            <Setter TargetName="ToggleButtonRootGrid" Property="Background" Value="{DynamicResource AtcApps.Brushes.Gray7}" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ItemBase  -->
    <Style x:Key="AtcApps.Styles.ComboBoxItem" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="Background" Value="{DynamicResource AtcApps.Brushes.ThemeBackground}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="{DynamicResource AtcApps.Brushes.Text}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="MinHeight" Value="26" />
        <Setter Property="MinWidth" Value="62" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Grid
                        x:Name="RootGrid"
                        Background="Transparent"
                        RenderOptions.ClearTypeHint="{TemplateBinding RenderOptions.ClearTypeHint}"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">

                        <decorators:ClipBorder
                            x:Name="Background"
                            Background="{TemplateBinding Background}"
                            CornerRadius="{TemplateBinding helpers:ControlsHelper.CornerRadius}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                        <decorators:ClipBorder
                            x:Name="Border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding helpers:ControlsHelper.CornerRadius}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <ContentPresenter
                                x:Name="ContentPresenter"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </decorators:ClipBorder>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Background" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:ItemHelper.SelectedBackgroundBrush), Mode=OneWay}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:ItemHelper.SelectedBorderBrush), Mode=OneWay}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:ItemHelper.SelectedForegroundBrush), Mode=OneWay}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="Selector.IsSelectionActive" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Background" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:ItemHelper.ActiveSelectionBackgroundBrush), Mode=OneWay}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:ItemHelper.ActiveSelectionBorderBrush), Mode=OneWay}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:ItemHelper.ActiveSelectionForegroundBrush), Mode=OneWay}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Background" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:ItemHelper.HoverSelectedBackgroundBrush), Mode=OneWay}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:ItemHelper.HoverSelectedBorderBrush), Mode=OneWay}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:ItemHelper.HoverSelectedForegroundBrush), Mode=OneWay}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Background" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:ItemHelper.HoverBackgroundBrush), Mode=OneWay}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:ItemHelper.HoverBorderBrush), Mode=OneWay}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:ItemHelper.HoverForegroundBrush), Mode=OneWay}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Background" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:ItemHelper.DisabledBackgroundBrush), Mode=OneWay}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:ItemHelper.DisabledBorderBrush), Mode=OneWay}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:ItemHelper.DisabledForegroundBrush), Mode=OneWay}" />
                            <Setter TargetName="RootGrid" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background, Mode=OneWay}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Background" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:ItemHelper.DisabledSelectedBackgroundBrush), Mode=OneWay}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:ItemHelper.DisabledSelectedBorderBrush), Mode=OneWay}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:ItemHelper.DisabledSelectedForegroundBrush), Mode=OneWay}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="helpers:ItemHelper.ActiveSelectionBackgroundBrush" Value="{DynamicResource AtcApps.Brushes.Accent}" />
        <Setter Property="helpers:ItemHelper.ActiveSelectionForegroundBrush" Value="{DynamicResource AtcApps.Brushes.Selected.Foreground}" />
        <Setter Property="helpers:ItemHelper.DisabledForegroundBrush" Value="{DynamicResource AtcApps.Brushes.Gray}" />
        <Setter Property="helpers:ItemHelper.DisabledSelectedBackgroundBrush" Value="{DynamicResource AtcApps.Brushes.Gray7}" />
        <Setter Property="helpers:ItemHelper.DisabledSelectedForegroundBrush" Value="{DynamicResource AtcApps.Brushes.Selected.Foreground}" />
        <Setter Property="helpers:ItemHelper.HoverBackgroundBrush" Value="{DynamicResource AtcApps.Brushes.Accent3}" />
        <Setter Property="helpers:ItemHelper.HoverForegroundBrush" Value="{DynamicResource AtcApps.Brushes.Text}" />
        <Setter Property="helpers:ItemHelper.HoverSelectedBackgroundBrush" Value="{DynamicResource AtcApps.Brushes.Accent}" />
        <Setter Property="helpers:ItemHelper.HoverSelectedForegroundBrush" Value="{DynamicResource AtcApps.Brushes.Selected.Foreground}" />
        <Setter Property="helpers:ItemHelper.SelectedBackgroundBrush" Value="{DynamicResource AtcApps.Brushes.Accent2}" />
        <Setter Property="helpers:ItemHelper.SelectedForegroundBrush" Value="{DynamicResource AtcApps.Brushes.Selected.Foreground}" />
        <Style.Triggers>
            <Trigger Property="IsVisible" Value="True">
                <Setter Property="RenderOptions.ClearTypeHint" Value="{Binding Path=(RenderOptions.ClearTypeHint), FallbackValue=Auto, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Selector}}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  Base  -->
    <Style x:Key="AtcApps.Styles.ComboBox" TargetType="{x:Type ComboBox}">
        <Setter Property="Background" Value="{DynamicResource AtcApps.Brushes.ThemeBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource AtcApps.Brushes.ComboBox.Border}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FontFamily" Value="{DynamicResource AtcApps.Fonts.Family.Control}" />
        <Setter Property="FontSize" Value="{DynamicResource AtcApps.Font.Size.Content}" />
        <Setter Property="Foreground" Value="{DynamicResource AtcApps.Brushes.Text}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="MinHeight" Value="26" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid Margin="0">
                        <Border
                            x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding helpers:ControlsHelper.CornerRadius}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                        <Grid Margin="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="TextColumn" Width="*" />
                                <ColumnDefinition x:Name="ButtonColumn" Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:TextBoxHelper.ButtonWidth), Mode=OneWay}" />
                                <ColumnDefinition x:Name="ToggleButtonColumn" Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:TextBoxHelper.ButtonWidth), Mode=OneWay}" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition x:Name="ButtonRow" Height="*" />
                            </Grid.RowDefinitions>

                            <ToggleButton
                                x:Name="PART_DropDownToggle"
                                Grid.RowSpan="2"
                                Grid.ColumnSpan="3"
                                Margin="0"
                                VerticalAlignment="Stretch"
                                helpers:ControlsHelper.CornerRadius="{TemplateBinding helpers:ControlsHelper.CornerRadius}"
                                helpers:TextBoxHelper.ButtonCommand="{TemplateBinding helpers:TextBoxHelper.ButtonCommand}"
                                helpers:TextBoxHelper.ButtonCommandParameter="{TemplateBinding helpers:TextBoxHelper.ButtonCommandParameter}"
                                helpers:TextBoxHelper.ButtonCommandTarget="{TemplateBinding helpers:TextBoxHelper.ButtonCommandTarget}"
                                helpers:TextBoxHelper.ButtonContent="{TemplateBinding helpers:TextBoxHelper.ButtonContent}"
                                helpers:TextBoxHelper.ButtonContentTemplate="{TemplateBinding helpers:TextBoxHelper.ButtonContentTemplate}"
                                helpers:TextBoxHelper.ButtonFontFamily="{TemplateBinding helpers:TextBoxHelper.ButtonFontFamily}"
                                helpers:TextBoxHelper.ButtonFontSize="{TemplateBinding helpers:TextBoxHelper.ButtonFontSize}"
                                helpers:TextBoxHelper.ButtonTemplate="{TemplateBinding helpers:TextBoxHelper.ButtonTemplate}"
                                helpers:TextBoxHelper.ButtonWidth="{TemplateBinding helpers:TextBoxHelper.ButtonWidth}"
                                helpers:TextBoxHelper.ClearTextButton="{TemplateBinding helpers:TextBoxHelper.ClearTextButton}"
                                Background="Transparent"
                                BorderBrush="{DynamicResource AtcApps.Brushes.ComboBox.Border}"
                                BorderThickness="0"
                                Foreground="{TemplateBinding Foreground}"
                                IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                KeyboardNavigation.IsTabStop="False"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                Style="{DynamicResource AtcApps.Styles.ToggleButton.ComboBoxDropDown}" />

                            <Grid
                                x:Name="ContentSite"
                                Grid.Row="1"
                                Grid.Column="0"
                                Margin="0">
                                <ContentPresenter
                                    Margin="{TemplateBinding Padding}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Content="{TemplateBinding SelectionBoxItem}"
                                    ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                    ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                    ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                    IsHitTestVisible="False"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>

                            <TextBlock
                                x:Name="PART_Message"
                                Grid.Row="1"
                                Grid.Column="0"
                                Margin="4,0"
                                Padding="{TemplateBinding Padding}"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Foreground="{TemplateBinding Foreground}"
                                Style="{DynamicResource AtcApps.Styles.TextBlock.Watermark}"
                                Text="{TemplateBinding helpers:TextBoxHelper.Watermark}"
                                TextAlignment="{TemplateBinding helpers:TextBoxHelper.WatermarkAlignment}"
                                TextTrimming="{TemplateBinding helpers:TextBoxHelper.WatermarkTrimming}"
                                Visibility="Collapsed" />
                        </Grid>

                        <Border
                            x:Name="DisabledVisualElement"
                            Grid.ColumnSpan="3"
                            Background="{DynamicResource AtcApps.Brushes.Control.Disabled}"
                            BorderBrush="{DynamicResource AtcApps.Brushes.Control.Disabled}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding helpers:ControlsHelper.CornerRadius}"
                            IsHitTestVisible="False"
                            Opacity="0"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:ControlsHelper.DisabledVisualElementVisibility), Mode=OneWay}" />

                        <Popup
                            x:Name="PART_Popup"
                            AllowsTransparency="True"
                            Focusable="False"
                            IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                            Placement="Bottom"
                            PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                            <Grid MinWidth="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}}" MaxHeight="{Binding MaxDropDownHeight, RelativeSource={RelativeSource TemplatedParent}}">
                                <decorators:ClipBorder
                                    x:Name="PopupBorder"
                                    Height="Auto"
                                    HorizontalAlignment="Stretch"
                                    Background="{DynamicResource AtcApps.Brushes.ThemeBackground}"
                                    BorderBrush="{DynamicResource AtcApps.Brushes.ComboBox.PopupBorder}"
                                    BorderThickness="1"
                                    CornerRadius="0"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                    <ScrollViewer Padding="1" BorderThickness="0">
                                        <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </decorators:ClipBorder>
                            </Grid>
                        </Popup>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused" />
                                <VisualState x:Name="FocusedDropDown">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="PopupBorder"
                                            Storyboard.TargetProperty="(UIElement.Visibility)"
                                            Duration="00:00:00">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEditable}" Value="False" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=SelectedItem}" Value="{x:Null}" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_Message" Property="Visibility" Value="Visible" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=SelectedItem, Mode=OneWay, Converter={x:Static atcValueConverters:IsNullValueConverter.Instance}}" Value="True" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsKeyboardFocusWithin}" Value="True" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEditable}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource AtcApps.Storyboard.EnterGotFocus}" />
                            </MultiDataTrigger.EnterActions>
                            <MultiDataTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource AtcApps.Storyboard.ExitGotFocus}" />
                            </MultiDataTrigger.ExitActions>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=SelectedItem, Mode=OneWay, Converter={x:Static atcValueConverters:IsNullValueConverter.Instance}}" Value="False" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEditable}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource AtcApps.Storyboard.EnterHasText}" />
                            </MultiDataTrigger.EnterActions>
                            <MultiDataTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource AtcApps.Storyboard.ExitHasText}" />
                            </MultiDataTrigger.ExitActions>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsVisible, RelativeSource={RelativeSource Self}}" Value="True" />
                                <Condition Binding="{Binding Path=(helpers:TextBoxHelper.UseFloatingWatermark), RelativeSource={RelativeSource Self}}" Value="True" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEditable}" Value="False" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=SelectedItem, Mode=OneWay, Converter={x:Static atcValueConverters:IsNullValueConverter.Instance}}" Value="False" />
                                <Condition Binding="{Binding Path=(helpers:TextBoxHelper.Watermark), RelativeSource={RelativeSource Self}, Converter={x:Static atcValueConverters:StringNullOrEmptyToBoolValueConverter.Instance}}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource AtcApps.Storyboard.ShowFloatingMessage}" />
                            </MultiDataTrigger.EnterActions>
                            <MultiDataTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource AtcApps.Storyboard.HideFloatingMessage}" />
                            </MultiDataTrigger.ExitActions>
                        </MultiDataTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="helpers:TextBoxHelper.ClearTextButton" Value="False" />
                                <Condition Property="helpers:TextBoxHelper.ButtonCommand" Value="{x:Null}" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ContentSite" Property="Grid.ColumnSpan" Value="2" />
                            <Setter TargetName="PART_Message" Property="Grid.ColumnSpan" Value="2" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEditable" Value="False" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource AtcApps.Brushes.Gray9}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource AtcApps.Brushes.ComboBox.Border.MouseOver}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="True" />
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="DisabledVisualElement" Property="Opacity" Value="0.6" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Validation.ErrorTemplate" Value="{DynamicResource AtcApps.Templates.ValidationError}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="helpers:ControlsHelper.FocusBorderBrush" Value="{DynamicResource AtcApps.Brushes.ComboBox.Border.Focus}" />
        <Setter Property="helpers:ControlsHelper.MouseOverBorderBrush" Value="{DynamicResource AtcApps.Brushes.ComboBox.Border.MouseOver}" />
        <Setter Property="helpers:TextBoxHelper.ButtonCommandParameter" Value="{Binding RelativeSource={RelativeSource Self}, Mode=OneWay}" />
        <Setter Property="helpers:TextBoxHelper.ButtonCommandTarget" Value="{Binding RelativeSource={RelativeSource Self}, Mode=OneWay}" />
        <Setter Property="helpers:TextBoxHelper.ButtonFontSize" Value="{DynamicResource AtcApps.Font.Size.Button.ClearText}" />
        <Setter Property="helpers:TextBoxHelper.ButtonTemplate" Value="{DynamicResource AtcApps.Templates.Button.Chromeless}" />
        <Setter Property="helpers:TextBoxHelper.ButtonWidth" Value="22" />
    </Style>

</ResourceDictionary>