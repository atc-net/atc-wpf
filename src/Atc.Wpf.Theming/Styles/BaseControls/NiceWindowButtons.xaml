<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:atc="clr-namespace:Atc.Wpf.Theming.Controls"
    xmlns:atcValueConverters="https://github.com/atc-net/atc-wpf/tree/main/schemas/value-converters"
    xmlns:controlzex="urn:controlzex"
    xmlns:helper="clr-namespace:Atc.Wpf.Theming.Helpers">

    <atcValueConverters:ThicknessToDoubleValueConverter x:Key="BorderThicknessToStrokeThicknessConverter" TakeThicknessSide="Left" />

    <!--  Base for windows: min, max and close  -->
    <Style x:Key="AtcApps.Styles.Button.NiceWindow.Base" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource AtcApps.Brushes.Transparent}" />
        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Opacity" Value="0.8" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="{TemplateBinding Background}">
                        <atc:ContentControlEx
                            x:Name="PART_ContentPresenter"
                            Padding="{TemplateBinding Padding}"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Content}"
                            ContentCharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helper:ControlsHelper.ContentCharacterCasing)}"
                            ContentStringFormat="{TemplateBinding ContentStringFormat}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                            RecognizesAccessKey="{TemplateBinding helper:ControlsHelper.RecognizesAccessKey}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource AtcApps.Brushes.SemiTransparent}" />
                <Setter Property="Opacity" Value="1" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource AtcApps.Brushes.AccentBase}" />
                <Setter Property="Foreground" Value="{DynamicResource AtcApps.Brushes.IdealForeground}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource AtcApps.Brushes.IdealForegroundDisabled}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  Light for windows: min, max and close  -->
    <Style
        x:Key="AtcApps.Styles.Button.NiceWindow.Light"
        BasedOn="{StaticResource AtcApps.Styles.Button.NiceWindow.Base}"
        TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="MaxHeight" Value="34" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Width" Value="34" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource AtcApps.Brushes.Window.ButtonCommands.Background.MouseOver}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource AtcApps.Brushes.AccentBase}" />
                <Setter Property="Foreground" Value="{DynamicResource AtcApps.Brushes.IdealForeground}" />
            </Trigger>
            <Trigger Property="controlzex:NonClientControlProperties.IsNCMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource AtcApps.Brushes.Window.ButtonCommands.Background.MouseOver}" />
            </Trigger>
            <Trigger Property="controlzex:NonClientControlProperties.IsNCPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource AtcApps.Brushes.AccentBase}" />
                <Setter Property="Foreground" Value="{DynamicResource AtcApps.Brushes.IdealForeground}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource AtcApps.Brushes.IdealForegroundDisabled}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="AtcApps.Styles.Button.NiceWindow.LightHighlight"
        BasedOn="{StaticResource AtcApps.Styles.Button.NiceWindow.Light}"
        TargetType="{x:Type Button}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource AtcApps.Brushes.Window.CloseButton.Background.MouseOver}" />
                <Setter Property="Opacity" Value="1" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource AtcApps.Brushes.Window.CloseButton.Background.Pressed}" />
                <Setter Property="Opacity" Value="1" />
            </Trigger>
            <Trigger Property="controlzex:NonClientControlProperties.IsNCMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource AtcApps.Brushes.Window.CloseButton.Background.MouseOver}" />
                <Setter Property="Opacity" Value="1" />
            </Trigger>
            <Trigger Property="controlzex:NonClientControlProperties.IsNCPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource AtcApps.Brushes.Window.CloseButton.Background.Pressed}" />
                <Setter Property="Opacity" Value="1" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  Dark for windows: min, max and close  -->
    <Style
        x:Key="AtcApps.Styles.Button.NiceWindow.Dark"
        BasedOn="{StaticResource AtcApps.Styles.Button.NiceWindow.Base}"
        TargetType="{x:Type Button}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource AtcApps.Brushes.Window.ButtonCommands.Background.MouseOver}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource AtcApps.Brushes.AccentBase}" />
                <Setter Property="Foreground" Value="{DynamicResource AtcApps.Brushes.IdealForeground}" />
            </Trigger>
            <Trigger Property="controlzex:NonClientControlProperties.IsNCMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource AtcApps.Brushes.Window.ButtonCommands.Background.MouseOver}" />
            </Trigger>
            <Trigger Property="controlzex:NonClientControlProperties.IsNCPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource AtcApps.Brushes.AccentBase}" />
                <Setter Property="Foreground" Value="{DynamicResource AtcApps.Brushes.IdealForeground}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource AtcApps.Brushes.IdealForegroundDisabled}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="AtcApps.Styles.Button.NiceWindow.DarkHighlight"
        BasedOn="{StaticResource AtcApps.Styles.Button.NiceWindow.Dark}"
        TargetType="{x:Type Button}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource AtcApps.Brushes.Window.CloseButton.Background.MouseOver}" />
                <Setter Property="Opacity" Value="1" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource AtcApps.Brushes.Window.CloseButton.Background.Pressed}" />
                <Setter Property="Opacity" Value="1" />
            </Trigger>
            <Trigger Property="controlzex:NonClientControlProperties.IsNCMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource AtcApps.Brushes.Window.CloseButton.Background.MouseOver}" />
                <Setter Property="Opacity" Value="1" />
            </Trigger>
            <Trigger Property="controlzex:NonClientControlProperties.IsNCPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource AtcApps.Brushes.Window.CloseButton.Background.Pressed}" />
                <Setter Property="Opacity" Value="1" />
            </Trigger>
        </Style.Triggers>
    </Style>


</ResourceDictionary>