name: "Post-Integration"

on:
  push:
    branches:
      - main
      - '!stable'
      - '!release'

env:
  ATC_EMAIL: 'atcnet.org@gmail.com'
  ATC_NAME: 'Atc-Net'
  NUGET_REPO_URL: 'https://nuget.pkg.github.com/atc-net/index.json'

jobs:
  merge-to-stable:
    runs-on: windows-latest
    steps:
      - name: üõí Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.PAT_WORKFLOWS }}

      - name: ‚öõÔ∏è Sets environment variables - branch-name
        uses: nelonoel/branch-name@v1.0.1

      - name: ‚öõÔ∏è Sets environment variables - Nerdbank.GitVersioning
        uses: dotnet/nbgv@master
        with:
          setAllVars: true

      - name: ‚öôÔ∏è Setup dotnet 8.0.x
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: ‚öôÔ∏è Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu'

      - name: üìê Ensure nuget.org added as package source on Windows
        run: dotnet nuget add source https://api.nuget.org/v3/index.json -n nuget.org --configfile $env:APPDATA\NuGet\NuGet.Config
        continue-on-error: true

      - name: üîÅ Restore packages
        run: dotnet restore

      - name: üõ†Ô∏è Build
        run: dotnet build -c Release --no-restore /p:UseSourceLink=true

      - name: üß™ Run unit tests
        run: dotnet test -c Release --no-build

      - name: üå©Ô∏è SonarCloud install scanner
        run: dotnet tool install --global dotnet-sonarscanner

      - name: üå©Ô∏è SonarCloud analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: pwsh
        run: |
          dotnet sonarscanner begin /k:"atc-wpf" /o:"atc-net" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          dotnet build -c Release /p:UseSourceLink=true --no-restore
          dotnet sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

      - name: ‚è© Merge to stable-branch
        run: |
          git config --local user.email ${{ env.ATC_EMAIL }}
          git config --local user.name ${{ env.ATC_NAME }}
          git checkout stable
          git merge --ff-only main
          git push origin stable

      - name: üó≥Ô∏è Creating library package for pre-release
        run: dotnet pack -c Release --no-restore -o ${GITHUB_WORKSPACE}/packages -p:RepositoryBranch=$BRANCH_NAME

      - name: üì¶ Push packages to GitHub Package Registry
        run: |
          cd ${GITHUB_WORKSPACE}/packages
          dotnet nuget push Atc.Wpf.${{ env.NBGV_NuGetPackageVersion }}.nupkg -k ${{ secrets.GITHUB_TOKEN }} -s ${{ env.NUGET_REPO_URL }} --skip-duplicate
          dotnet nuget push Atc.Wpf.Controls.${{ env.NBGV_NuGetPackageVersion }}.nupkg -k ${{ secrets.GITHUB_TOKEN }} -s ${{ env.NUGET_REPO_URL }} --skip-duplicate
          dotnet nuget push Atc.Wpf.Controls.Sample.${{ env.NBGV_NuGetPackageVersion }}.nupkg -k ${{ secrets.GITHUB_TOKEN }} -s ${{ env.NUGET_REPO_URL }} --skip-duplicate
          dotnet nuget push Atc.Wpf.FontIcons.${{ env.NBGV_NuGetPackageVersion }}.nupkg -k ${{ secrets.GITHUB_TOKEN }} -s ${{ env.NUGET_REPO_URL }} --skip-duplicate
          dotnet nuget push Atc.Wpf.Theming.${{ env.NBGV_NuGetPackageVersion }}.nupkg -k ${{ secrets.GITHUB_TOKEN }} -s ${{ env.NUGET_REPO_URL }} --skip-duplicate
